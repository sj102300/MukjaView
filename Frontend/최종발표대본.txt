안녕하세요 팀 파워레인저의 발표를 맡은 이승주입니다. 저희는 당신만을 위한 맞춤 레스토랑 리뷰 서비스, 먹자VIEW를 제안합니다!

목차는 저희 서비스가 어떻게 나오게 되었는지에 대한 서비스 배경, 저희 서비스 소개, 저희 서비스를 통해 얻을 수 있는 기대효과, 마지막 저희 서비스가 만들어진 개발 환경 순으로 발표하겠습니다.

여러분은 식당을 고를때, 어떤 기준으로 식당을 선택하시나요? 저 같은 경우는 >>맛<<인데요. 그래서 별점이 높은 식당에 방문했지만 만족도가 그닥이었던 적이 꽤 많아요. 그래서 왜 그럴까 하고 리뷰들을 천천히 읽어보면, 제가 중요하게 생각하는 맛에 대한 이야기 보다는 분위기나, 서비스 측면에서의 이야기가 더 많았더라구요.

이렇듯 사람마다 식당을 고를때 고려하는 우선순위는 모두 다르지만, 1순위의 기준에 잘 부합하는지를 알아보려면, 기존의 리뷰를 꼼꼼하게 읽어야한다는 불편함이 있습니다. 그래서 저희는 개인에게 맞춰진 리뷰를 볼 수 있다면 좋겠다는 생각에서 

유저 맞춤형 레스토랑 리뷰 서비스인 먹자VIEW를 기획해보았습니다 ! 먹자VIEW라는 이름은 내가 먹어본 듯한 데자뷰 같은 리뷰를 볼 수 있다!는 의미를 담아 제작했습니다.

네 그래서 이제 먹자VIEW가 어떤 서비스인지 소개해드리겠습니다.

해당 슬라이드는 저희 서비스의 전반적인 UI/UX 흐름도 인데요, 앞으로 이어질 서비스 소개가 UI를 따라가도록 준비해서, 이 슬라이드의 큰 흐름을 기억해주시면 좋을것같아요!

먼저 유저는 회원 가입을 통해서 나의 먹바타를 생성하고 내 먹BTI를 분석합니다. 그리고 이 먹바타를 통해 나에게 꼭맞는 식당을 한눈에 확인하고, 내 먹BTI로 분석한 리뷰들을 볼 수 있습니다. 그리고 마지막으로 가고 싶은 식당들을 모아 나만의 맛집 위시리스트를 만들 수 있습니다.

네 이제 본격적으로 저희 서비스를 자세하게 보여드리겠습니다.

먼저 회원가입 과정입니다. 

구글을 통해 회원가입을 진행하고 닉네임을 입력한 후, 먹바타 생성에 이용할 셀카를 업로드합니다.

그 다음, 식당을 고를때 고려하는 요소인 맛, 분위기, 서비스 세가지의 우선순위와 가성비를 고려하는지를 입력받아 회원가입을 완료합니다. 이 회원가입을 통해서 먹바타를 생성하고, 유저의 먹BTI를 분석합니다.

먼저 먹BTI의 경우 맛, 분위기, 친절함의 순서 3!, 가성비OX의 2 를 곱해서 총 12가지의 먹BTI를 만들었습니다. 저의 경우, 맛>서비스>분위기 + 가성비O 캐릭터기 때문에, 12가지중 마지막 캐릭터인, 친절한 미식추구형 FSM-R / 고소한 아몬드 맛이 되겠네요!

먹바타 생성를 생성하는 과정은, Open CV를 통해서 셀카가 아닌 사진에 대한 예외처리를 하고, 얼굴이 감지되면, AILabTools의 API를 이용하여, 배경제거, 카툰화, 표정변화를 차례대로 진행하여, 긍정/중립/부정 표정의 먹바타를 생성합니다.

그래서 이렇게 생성한 먹바타와 먹BTI는 마이페이지에서 확인할수있고, 회원정보 수정 또한 가능합니다.

이제 나를 꼭 닮은 먹바타와 함께 내 먹BTI에 꼭맞는 식당을 찾아 보겠습니다

여기 지도 UI를 보시면, 캐릭터가 하나는 웃고 있고, 하나는 울고 있어요. 이는 유저가 좋아할만한 식당에는 긍정적인 표정의 먹바타를, 좋아하지 않을만한 식당에는 부정적인 표정의 먹바타를 지도 맵핀 대신 이용하여, 내가 좋아할만한 식당이 어디에있는지 한눈에 파악할 수 있게 합니다.

또는 목록보기 UI를 통해서 나의 먹BTI와 잘맞는 식당들을 우선으로 모아 볼 수도 있고, 특정 식당을 찾고싶다면 가게명/태그로 식당을 검색해볼 수 있습니다.

이 긍부정 평가는 크롤링한 데이터를 바탕으로 맛/분위기/서비스/가성비의 네가지 기준 중 어디에 해당하는지를 따지고, 이를 수치화 시켜서 각 먹BTI별로 부합하는지를 판별합니다.

그리고 한 식당을 선택하면 해당 식당의 간략한 정보와 함께 썸네일 이미지를 확인할 수 있습니다. 이 썸네일 이미지는

크롤링된 대표메뉴 사진을 GPT - vision을 통해 텍스트로 변환한후, Dalle3를 서비스 컨셉에 어울리도록 프롬프팅하여 썸네일 이미지를 생성합니다.

그리고 크롤링된 데이터에서 가게명과 대표메뉴를 추출하여 이미지로 변환한후, 이 두가지를 합쳐서 썸네일 이미지를 생성하게 됩니다. 

그럼 이제 본격적으로 해당 식당의 리뷰를 확인해보겠습니다.

저의 경우, 저의 먹BTI와 가장 잘 맞는다고 추천해준 제일곱창 식당을 선택해볼게요.

그러면 역시 첫번째로 추천된 식당 답게, 저의 먹BTI인 고소한 아몬드 맛에게 가장 추천해주는 식당이라는 것을 확인할 수 있습니다.

도표를 통해, 맛 > 서비스 > 분위기 가 평균과 얼마나 차이나는지에 대한 값을 수치적으로 나타내어 유저로 하여금 신뢰도를 올릴 수 있도록 해보았구요.

세번째 카드에서는, 이제 저희 서비스의 핵심인 유저의 먹BTI를 바탕으로 분석된 리뷰와, 업스케일링 된 이미지들을 확인할 수 있습니다. 마지막으로 댓글기능도 제공하고 있어요.

먼저 업스케일링 된 이미지의 경우, ESRGAN 모델을 통해서 고화질화 하고, OpenCV를 통해 밝기/대비/색조/채도를 조절하여 맛있어 보이는 필터를 씌운 이미지를 제공합니다.

다음은 이제 저희 서비스의 핵심인 먹BTI에 따라 분석된 텍스트 리뷰 데이터 인데요! 아까 슬라이드에서 화면이 작아 잘 보이지 않아서, 크게 가져와 봤습니다.

저의 먹BTI에 따라, 맛 > 서비스 > 분위기 순으로 중요하고, 가성비를 따지는 고소한 아몬드맛 캐릭터를 바탕으로 생성한 리뷰입니다.

저희가 생성한 리뷰들은, 먹BTI 별로 , 우선순위에 따라 문단 순서를 배치하도록 하고, 우선순위가 높을수록 비중을 두어 생성하도록 했습니다.

천천히 문단별로 살펴보자면 첫문단인 맛에 관한 문단에서는 부정적인 평가가 없어요. 맛있고 좋은 식당인듯 합니다. 두번째 서비스 문단에서는 첫줄에서 다소 아쉬운면이 있다고는 하지만, 상당히 만족스러웠고, 가치가 있다는 등 그래도 대체적으로 긍정적인 평가를 내리고 있어요.

마지막 분위기랑 가성비에 관련한 이야기도 하고있습니다.

그럼 이 식당은 맛에 대한 리뷰가 긍정적이니 누구에게 좋은 식당일까요 ? 그럼 이제 이 식당에 대해서 다른 먹BTI는 어떤 평가를 내리는지 살펴보겠습니다.

다른 먹BTI의 리뷰를 확인하기 위해서는, 다른 캐릭터의 리뷰 더보기 버튼을 클릭하고, 원하는 먹BTI 캐릭터를 선택해서 볼 수 있습니다. 저의 경우, 똑같은 제일곱창 식당에 대해서 서비스>분위기>맛의 우선순위를 가지고 가성비 O 캐릭터인 새콤달콤한 라즈베리 맛을 선택했는데요.

이 라즈베리 캐릭터에게는 좋은 식당이 아니라는 평가를 내리고 있네요.

그럼 이 캐릭터의 텍스트 리뷰를 잘 살펴봅시다.

첫번째 서비스에 관한 문단을 보시면 주문하기 조금 어려울 수 있다. 주문하기 눈치가 보인다. 주문과정에서 더 원활한 소통이 이루어졌으면 좋겠다 등, 서비스에 관한 부정적인 리뷰들을 많이 포함하고 있네요

이 캐릭터에게는 식당을 고를 때 서비스가 가장 중요한 요소인 만큼, 해당 식당이 서비스에 관한 부정적인 평가를 많이 포함하고 있기 때문에, 해당 식당과 이 캐릭터는 어울리지 않는다는 결론이 나오게 되었습니다. 

하나 더 살펴볼까요 ?

이번엔 저에게 순위가 낮았던 빕스 어린이대공원점의 리뷰를 가져와봤습니다.

첫번째 맛에 관한 문단을 살펴보시면, 일부 메뉴는 기대에 못 미쳤다. 맛의 균형이 필요해보인다. 세심한 맛의 조정이 필요하다 등, 맛에 관한 부정적인 평가를 다수 포함하고 있어요. 

두번째 문단인 서비스 문단에서도, 서비스가 미흡하다. 직원들의 부족함이 느껴진다. 불편함을 경험했다 등 부정적인 평가를 많이 포함하고 있네요.

그러나 같은 식당에 대해서 

분위기 > 서비스 > 맛 순서로 중요하고 가성비를 따지지 않는 치즈맛 캐릭터의 리뷰를 한번 살펴볼까요?

첫번째 분위기에 관한 문단에서 뭐 물론 소란스럽다, 좌석이 부족하다 는 등의 부정적인 평가도 일부 포함하고는 있지만, 마지막에 넓은 공간이 좋고, 모임 장소로 이상적이다. 여전히 많은 사랑을 받을 자격이 있다 는 등 대체적으로는 긍정적인 평가를 내리고 있습니다.

두번째 서비스 문단에서는 아까와 같게 추가인력이 시급히 필요하다. 서비스 전반적인 만족도가 떨어진다. 세심한 배려가 필요하다 등 부정적인 평가를 많이 포함하고 있네요.

반대로, 아까 맛이 중요했던 먹BTI의 리뷰와는 다르게, 해당 캐릭터에게 맛은 3순위로 가장 우선순위가 낮기에, 맛에 관한 부정적인 리뷰는 포함되지 않고 있어요.

이렇듯 저희는 사람들이 식당을 고를때 중요하게 생각하는 요소들을 고려하여, 각 먹BTI별로 차별화된 리뷰를 제공하고있습니다.

내가 아무리 분위기가 좋고 친절한 식당에 방문하더라도, 맛이 가장 중요한 나에게는, 그 식당이 좋은 식당이 아닐 수 있다는 점을 고려하여, 유저 개개인에게 맞춤화 되도록 리뷰를 생성했습니다.

그럼 이 텍스트 리뷰들이 생성된 과정을 설명드리겠습니다.

크롤링하고 전처리된 실제 리뷰들을 한국어 임베딩 모델(ko-sroberta-multi-task)을 활용하여 chroma 벡터 스토어에 저장하고, 맛/서비스/분위기/가성비 등 서비스에 필요한 단어들을 쿼리로 임베딩하여 보냅니다. 임베딩된 쿼리는 저장된 벡터DB와 매칭되고, GPT에게 각 먹BTI별로 필요한 context를 보냅니다.

GPT는 실제 리뷰 데이터들을 보고 맛/분위기/서비스/가성비의 문단을 각각 생성하도록 하여, 각 문단별로 차별성을 부여합니다. 그리고 이 문단들을 한번에 모아, 하이라이팅을 진행하고 최종적인 리뷰를 생성합니다. 

해당 표는 저희가 생성한 리뷰들이 각 먹BTI별로 우선순위가 높은것에 비중을 두어 말하는지를 살펴볼 수 있도록, 각 문단별로 글자수를 평균 내보았습니다.

오른쪽에 있는 그래프를 보시면, 1순위 문단이 약 538자, 2순위 문단이 약 271자, 3순위 문단이 약 108자 정도로, 먹비티아이의 우선순위에 따라 비중을 두어 말하고 있음을 확인할 수 있습니다.

추가로, 가성비를 고려하는 캐릭터에게는 가성비에 대한 이야기를 약 83자 정도 추가로 이야기하고 있음을 확인할 수 있습니다. 

마지막으로 나만의 맛집 위시리스트를 만드는 과정인데요. 리뷰를 확인하는 과정에서 방문해보고 싶다는 생각이 들었다면, 좋아요 하트 버튼을 눌러서 나만의 맛집 위시리스트를 만들 수 있습니다. 그리고 이 위시리스트는 마이페이지에서 확인할 수 있어요.

그래서 정리하자면 먹자VIEW에서 유저는, 

나와 꼭 닮은 먹바타와 함께 내가 좋아할만한 식당을 찾아보고

나의 먹BTI에 따라 분석된 유저 개인에게 맞춤화된 리뷰를 확인하고,

나만의 맛집 위시리스트를 만들 수 있습니다. 

⇒ 그러면 유저는 내가 원하는, 나와 꼭 맞는 식당인지 아닌지 확인하기 위해 수많은 리뷰들을 다 읽어볼 필요없이, 저희가 제공하는 약 1000자 정도의리뷰만으로 내가 원하는 식당인지 아닌지 한번에 판단할 수 있게 될것입니다 !

그래서 이 먹자VIEW 서비스는 이런 구조로 이루어져 있습니다.

간단하게 설명하자면, react를 사용하여 모바일에 최적화된 웹앱으로 개발하고, 이를 Nginx를 사용하여 호스팅합니다. Spring과 Flask를 사용해서 API 서버를 구축하고, MariaDB를 이용하여 CRUD를 구성합니다. 그리고 이를 Docker를 사용해서 각각의 구성 서비스들을 컨테이너화 하고, github action과 dockerhub을 통해 CI/CD를 구축하여, GCP를 통해 배포합니다.

Python으로 크롤링한 데이터들을 이용하여, 서비스에서 쓰일 텍스트 리뷰 데이터와 썸네일 이미지 데이터들을 GPT와 DALLE를 통해 생성하여 DB에 저장합니다.

그래서 이렇게 개발된 먹자VIEW 서비스는 여기 QR코드를 통해서 방문해볼 수 있습니다. 이 큐알코드를 통해 저희 서비스 이용해보면서, 나를 꼭닮은 먹바타와 함께 나의 먹BTI를 바탕으로 분석된 리뷰들을 확인해보면서, 나와 잘 맞는 식당들을 찾아보시면 좋을것 같습니다!

여기까지 먹자VIEW에 대한 소개였구요! 저희 서비스 많이 이용해주세요 감사합니다!!

그래서 이렇게 개발된 먹자VIEW 서비스 여기 QR코드를 통해서 방문해보시고, 저희 서비스를 통해서 여러분들에게 꼭맞는 식당들 많이 찾아보시면 좋을것같습니다.

이용해보신 후에는, 댓글의 설문조사로 만족도를 표현해주세요!

네 여기까지 먹자VIEW에 대한 소개 였구요! 발표 들어주셔서 감사하고, 저희 서비스 많이 이용해주세요! 감사합니다!!!